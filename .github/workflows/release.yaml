name: Release Creation

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: "recursive"

      # get part of the tag after the `v`
      - name: Extract tag version number
        id: get_version
        run: |
          echo "version=${{  github.ref_name }}" >> $GITHUB_OUTPUT
          echo "version-without-v=${{  github.ref_name }}" | sed 's/^v//' >> $GITHUB_OUTPUT

      - name: Echo tag output
        run: echo ${{ steps.get_version.outputs.version-without-v }}

      # Substitute the Manifest and Download URLs in the module.json
      - name: Substitute Manifest and Download Links For Versioned Ones
        id: sub_manifest_link_version
        env:
          version: ${{steps.get_version.outputs.version-without-v}}
          manifest: https://github.com/${{github.repository}}/releases/latest/download/module.json
          download: https://github.com/${{github.repository}}/releases/download/${{steps.get_version.outputs.version}}/neovatar-gos-worldscripts.zip
        run: |
          sed -i "s|\"manifest\": \".*\"|\"manifest\": \"${manifest}\"|g" module.json
          sed -i "s|\"download\": \".*\"|\"download\": \"${download}\"|g" module.json
          sed -i "s|\"version\": \".*\"|\"version\": \"${version}\"|g" module.json

      # Create a zip file with all files required by the module to add to the release
      - run: zip -r ./neovatar-gos-worldscripts.zip module.json LICENSE.md scripts/

      # Create a release for this specific version
      - name: Update Release with Files
        id: create_version_release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true # Set this to false if you want to prevent updating existing releases
          name: ${{ steps.get_version.outputs.version }}
          draft: false
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "./module.json, ./neovatar-gos-worldscripts.zip"
          tag: ${{  github.ref_name }}
